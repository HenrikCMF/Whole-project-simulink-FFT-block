-- -------------------------------------------------------------
-- 
-- File Name: C:\dokumenter\FFTblock\simulinktest\FFT_block.vhd
-- Created: 2022-05-03 14:26:35
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- fifofull                      ce_out        1e-08
-- fftout                        ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FFT_block
-- Source Path: simulinktest/FFT_block
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FFT_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        line_in                           :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24
        new_sample                        :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        fifofull                          :   OUT   std_logic;
        fftout                            :   OUT   std_logic_vector(32 DOWNTO 0)  -- sfix33
        );
END FFT_block;


ARCHITECTURE rtl OF FFT_block IS

  -- Component Declarations
  COMPONENT FFT_HDL_Optimized
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33
          dataOut_im                      :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FFT_HDL_Optimized
    USE ENTITY work.FFT_HDL_Optimized(rtl);

  -- Signals
  SIGNAL FFT_HDL_Optimized_out1_re        : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL FFT_HDL_Optimized_out1_im        : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL FFT_HDL_Optimized_out2           : std_logic;
  SIGNAL FFT_HDL_Optimized_out1_re_signed : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL FFT_HDL_Optimized_out1_im_signed : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Product_mul_temp                 : signed(65 DOWNTO 0);  -- sfix66
  SIGNAL Product_out1                     : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Product1_mul_temp                : signed(65 DOWNTO 0);  -- sfix66
  SIGNAL Product1_out1                    : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Add_out1                         : signed(32 DOWNTO 0);  -- sfix33

BEGIN
  u_FFT_HDL_Optimized : FFT_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => line_in,  -- sfix24
              validIn => new_sample,
              dataOut_re => FFT_HDL_Optimized_out1_re,  -- sfix33
              dataOut_im => FFT_HDL_Optimized_out1_im,  -- sfix33
              validOut => FFT_HDL_Optimized_out2
              );

  FFT_HDL_Optimized_out1_re_signed <= signed(FFT_HDL_Optimized_out1_re);

  Product_mul_temp <= FFT_HDL_Optimized_out1_re_signed * FFT_HDL_Optimized_out1_re_signed;
  Product_out1 <= Product_mul_temp(32 DOWNTO 0);

  FFT_HDL_Optimized_out1_im_signed <= signed(FFT_HDL_Optimized_out1_im);

  Product1_mul_temp <= FFT_HDL_Optimized_out1_im_signed * FFT_HDL_Optimized_out1_im_signed;
  Product1_out1 <= Product1_mul_temp(32 DOWNTO 0);

  Add_out1 <= Product_out1 + Product1_out1;

  fftout <= std_logic_vector(Add_out1);

  ce_out <= clk_enable;

  fifofull <= FFT_HDL_Optimized_out2;

END rtl;

